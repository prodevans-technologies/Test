{
  "manifest": {
    "name": "vega-scale",
    "version": "2.5.1",
    "description": "Scales and color schemes for visual encoding.",
    "keywords": [
      "vega",
      "scale",
      "color",
      "palette"
    ],
    "license": "BSD-3-Clause",
    "author": {
      "name": "Jeffrey Heer",
      "url": "http://idl.cs.washington.edu"
    },
    "main": "build/vega-scale.js",
    "module": "index",
    "jsnext:main": "index",
    "repository": {
      "type": "git",
      "url": "https://github.com/vega/vega-scale.git"
    },
    "scripts": {
      "build": "npm run test && uglifyjs build/vega-scale.js -c -m -o build/vega-scale.min.js",
      "pretest": "rm -rf build && mkdir build && rollup -g d3-array:d3,d3-interpolate:d3,d3-scale:d3,d3-scale-chromatic:d3,d3-time:d3,vega-util:vega -f umd -n vega -o build/vega-scale.js -- index.js",
      "test": "tape 'test/**/*-test.js' && eslint index.js src test",
      "prepublishOnly": "npm run build",
      "postpublish": "git push && git push --tags && zip -j build/vega-scale.zip -- LICENSE README.md build/vega-scale.js build/vega-scale.min.js"
    },
    "dependencies": {
      "d3-array": "^2.0.2",
      "d3-interpolate": "^1.3.2",
      "d3-scale": "^2.1.2",
      "d3-scale-chromatic": "^1.3.3",
      "d3-time": "^1.0.10",
      "vega-util": "^1.7.0"
    },
    "devDependencies": {
      "eslint": "5",
      "rollup": "0.67.4",
      "tape": "4",
      "uglify-js": "3"
    },
    "_registry": "npm",
    "_loc": "/opt/app-root/src/.cache/yarn/v2/npm-vega-scale-2.5.1-5b5ce7752e904c17077db9a924418dabd6ffb991/package.json",
    "readmeFilename": "README.md",
    "readme": "# vega-scale\n\nScales and color schemes for visual encoding.\n\nThis module provides [scale](#scale) and [scheme](#scheme) methods for\nmanaging scale mappings and color schemes. By default, the scale and\nscheme registries include all scale types and color schemes provided\nby the [d3-scale](https://github.com/d3/d3-scale) and\n[d3-scale-chromatic](https://github.com/d3/d3-scale-chromatic) modules.\n\nThis module also provides augmented implementations of `'band'`, `'point'`,\nand `'sequential'` scales in order to provide improved layout and\ninversion support for band/point scales, and multi-domain and color range\narray support for sequential scales.\n\n## API Reference\n\n<a name=\"scale\" href=\"#scale\">#</a>\nvega.<b>scale</b>(<i>type</i>[, <i>scale</i>])\n[<>](https://github.com/vega/vega-scale/blob/master/src/scales.js \"Source\")\n\nRegistry function for adding and accessing scale constructor functions.\nThe *type* argument is a String indicating the name of the scale type.\nIf the *scale* argument is not specified, this method returns the matching\nscale constructor in the registry, or `null` if not found.\nIf the *scale* argument is provided, it must be a scale constructor function\nto add to the registry under the given *type* name.\n\nBy default, the scale registry includes entries for all scale types provided\nby the [d3-scale](https://github.com/d3/d3-scale) module. Scales created\nusing the constructor returned by this method have an additional `type`\nproperty indicating the scale type. All scales supporting either an `invert`\nor `invertExtent` method are augmented with an additional `invertRange`\nfunction that returns an array of corresponding domain values for a given\ninterval in the scale's output range.\n\n```js\n// linear scale\nvar linear = vega.scale('linear');\nvar scale = linear().domain([0, 10]).range([0, 100]);\nscale.type; // 'linear'\nscale.invertRange([0, 100]); // [0, 10]\n```\n\n```js\nvar ordinal = vega.scale('ordinal');\n\n// ordinal scale\nvar scale1 = ordinal().domain(['a', 'b', 'c']).range([0, 1, 2]);\nscale1.type; // 'ordinal'\n\n// ordinal scale with range set to the 'category20' color palette\nvar scale2 = ordinal().range(vega.scheme('category20'));\n```\n\n```js\nvar seq = vega.scale('sequential');\n\n// sequential scale, using the plasma color palette\nvar scale1 = seq().interpolator(vega.scheme('plasma'));\nscale1.type; // 'sequential'\n```\n\n<a name=\"scheme\" href=\"#scheme\">#</a>\nvega.<b>scheme</b>(<i>name</i>[, <i>scheme</i>])\n[<>](https://github.com/vega/vega-scale/blob/master/src/schemes.js \"Source\")\n\nRegistry function for adding and accessing color schemes.\nThe *name* argument is a String indicating the name of the color scheme.\nIf the *scheme* argument is not specified, this method returns the matching\nscheme value in the registry, or `null` if not found.\nIf the *scheme* argument is provided, it must be a valid color array or\n[interpolator](https://github.com/d3/d3-scale#sequential_interpolator)\nto add to the registry under the given *name*.\n\nBy default, the scheme registry includes entries for all scheme types\nprovided by the\n[d3-scale-chromatic](https://github.com/d3/d3-scale-chromatic) module.\nValid schemes are either arrays of color values (e.g., applicable to\n`'ordinal'` scales) or\n[interpolator](https://github.com/d3/d3-scale#sequential_interpolator)\nfunctions (e.g., applicable to `'sequential'` scales.)\n\n<a name=\"schemeDiscretized\" href=\"#schemeDiscretized\">#</a>\nvega.<b>schemeDiscretized</b>(<i>name</i>[, <i>schemes</i>, <i>interpolator</i>])\n[<>](https://github.com/vega/vega-scale/blob/master/src/schemes.js \"Source\")\n\nRegistry function for adding and accessing discretized color schemes,\nconsisting of an array of color schemes for specific value counts.\nThe *name* argument is a String indicating the name of the color scheme.\nIf the *schemes* argument is not specified, this method returns the matching\narray of color schemes value in the registry, or `null` if not found.\nIf the *schemes* argument is provided, it must be an array of valid color\narrays, with non-null entries at indices for each supported value count.\nFor example, the array at index 3 should be a 3-color array. The optional\n*interpolator* argument provides a continuous color\n[interpolator](https://github.com/d3/d3-scale#sequential_interpolator)\nto use when a specific item count is not provided or undefined. If the\n*interpolator* argument is not provided, an interpolator will be\nautomatically created using basis spline interpolation in the RGB color\nspace for the last (largest) color array in *schemes*.\n\n<a name=\"interpolate\" href=\"#interpolate\">#</a>\nvega.<b>interpolate</b>(<i>name</i>[, <i>gamma</i>])\n[<>](https://github.com/vega/vega-scale/blob/master/src/interpolate.js \"Source\")\n\nReturns the D3 interpolator factory with the given *name* and optional\n*gamma*. All interpolator types provided by the\n[d3-interpolate](https://github.com/d3/d3-interpolate) module are supported.\nHowever, Vega uses hyphenated rather than camelCase names.\n\n```js\nvar rgbBasis = vega.interpolate('rgb-basis'); // d3.interpolateRgbBasis\nvar rgbGamma = vega.interpolate('rgb', 2.2);  // d3.interpolateRgb.gamma(2.2)\n```\n\n<a name=\"interpolateRange\" href=\"#interpolateRange\">#</a>\nvega.<b>interpolateRange</b>(<i>interpolator</i>, <i>range</i>])\n[<>](https://github.com/vega/vega-scale/blob/master/src/interpolate.js \"Source\")\n\nGiven a D3 *interpolator* instance, return a new interpolator with a modified\ninterpolation *range*. The *range* argument should be a two element array\nwhose entries lie in the range [0, 1]. This method is convenient for\ntransforming the range of values over which interpolation is performed.\n\n```js\nvar number = d3.interpolateNumber(0, 10);\nnumber(0);   // 0\nnumber(0.5); // 5\nnumber(1);   // 1\n\nvar range = vega.interpolateRange(number, [0.2, 0.8]);\nrange(0);   // 2\nrange(0.5); // 5\nrange(1);   // 8\n```\n\n<a name=\"timeInterval\" href=\"#timeInterval\">#</a>\nvega.<b>timeInterval</b>(<i>unit</i>)\n[<>](https://github.com/vega/vega-scale/blob/master/src/timeInterval.js \"Source\")\n\nGiven a string _unit_, return a corresponding\n[D3 time interval](https://github.com/d3/d3-time#_interval) function.\nValid _unit_ strings are: `\"millisecond\"`, `\"second\"`, `\"minute\"`, `\"hour\"`,\n`\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\n<a name=\"utcInterval\" href=\"#utcInterval\">#</a>\nvega.<b>utcInterval</b>(<i>unit</i>)\n[<>](https://github.com/vega/vega-scale/blob/master/src/timeInterval.js \"Source\")\n\nGiven a string _unit_, return a corresponding UTC-variant of a\n[D3 time interval](https://github.com/d3/d3-time#_interval) function.\nValid _unit_ strings are: `\"millisecond\"`, `\"second\"`, `\"minute\"`, `\"hour\"`,\n`\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n",
    "licenseText": "Copyright (c) 2016, University of Washington Interactive Data Lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n  may be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vega-scale/-/vega-scale-2.5.1.tgz#5b5ce7752e904c17077db9a924418dabd6ffb991",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vega-scale/-/vega-scale-2.5.1.tgz",
    "hash": "5b5ce7752e904c17077db9a924418dabd6ffb991",
    "registry": "npm",
    "packageName": "vega-scale"
  },
  "registry": "npm",
  "hash": "5b5ce7752e904c17077db9a924418dabd6ffb991"
}